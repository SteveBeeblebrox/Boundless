plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
    id 'groovy'
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.8.21"
    id 'com.github.gmazzo.buildconfig' version '4.0.4'
}

sourceCompatibility = JavaVersion.VERSION_20
targetCompatibility = JavaVersion.VERSION_20

archivesBaseName = project.id
version = project.version
group = project.maven_group

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    implementation 'org.apache.groovy:groovy-all:4.0.12'
    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version
    inputs.property "id", project.id
    inputs.property "pkgroot", project.maven_group

    duplicatesStrategy = duplicatesStrategy.EXCLUDE

    filesMatching('fabric.mod.json') {
        expand "id": project.id, "version": project.version, "pkgroot": project.maven_group
    }
}

buildConfig {
    forClass(packageName = "${project.maven_group}.${project.id}", className = 'BuildData') {
        useJavaOutput()
        buildConfigField('String', 'ID', /"${project.id}"/)
        buildConfigField('String', 'VERSION', /"${project.version}"/)
    }
}



compileGroovy {
    configure(groovyOptions) {
        configurationScript = file("$rootDir/config.groovy")
        fileExtensions = ['sgroovy', 'groovy']
    }
}

sourceSets {
    main {
        groovy {
            filter.includes.add('**/*.sgroovy')
        }
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}